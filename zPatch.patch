*** a/src/App.jsx
--- b/src/App.jsx
@@
-function LayoutDiagram({ line }){
+function LayoutDiagram({ line, showMetrics = true, compact = false }){
   const [wrapRef, wrapW]=useContainerWidth();
 
   const sheet = effectiveSheetSizeMM(line);
   const sheetW = sheet.wMM, sheetH = sheet.hMM;
@@
-  const PAD=8, maxW=Math.max(160, wrapW||240), maxH=240; // fits narrow column; scales with container
-  const scale=Math.min((maxW-PAD*2)/sheetW,(maxH-PAD*2)/sheetH);
-  const toPx=(mm)=>mm*scale;
+  // sizing: compact (tight gray box, presets) vs responsive (job)
+  const PAD = 8;
+  const maxH = 240;
+  const maxW = Math.max(160, wrapW||240);
+  const scale = compact
+    ? (maxH - PAD*2) / sheetH
+    : Math.min((maxW - PAD*2) / sheetW, (maxH - PAD*2) / sheetH);
+  const toPx = (mm)=>mm*scale;
+  const svgW = compact ? (toPx(sheetW) + PAD*2) : maxW;
@@
-  return (
-    <div ref={wrapRef} className="mt-1">
-      <div className="flex items-center justify-between">
-        <div className="text-[12px] font-semibold text-stone-700">Layout Diagram</div>
-        <div className="text-xs text-stone-600">{layout.ups} up · {layout.cols}×{layout.rows} · {layout.rot||0}°</div>
-      </div>
-      <div className="mt-2 bg-stone-50 border border-stone-200 rounded-lg p-2">
-        <svg style={{width: '100%', height: maxH}} viewBox={`0 0 ${maxW} ${maxH}`} preserveAspectRatio="xMidYMid meet">
+  return (
+    <div ref={wrapRef} className={`mt-1 ${compact ? "w-fit" : ""}`}>
+      <div className="text-[12px] font-semibold text-stone-700">Layout Diagram</div>
+      <div className={`mt-2 ${compact ? "p-1" : "p-2"} bg-stone-50 border border-stone-200 rounded-lg`}>
+        <svg style={{width: svgW, height: maxH}} viewBox={`0 0 ${svgW} ${maxH}`} preserveAspectRatio="xMidYMid meet">
           <rect x={PAD} y={PAD} width={toPx(sheetW)} height={toPx(sheetH)} fill="#fff" stroke="#475569" strokeWidth="1"/>
           {layout.cells.map((cell,i)=>(
             <g key={i} transform={`translate(${PAD+toPx(cell.x)},${PAD+toPx(cell.y)})`}>
               <rect width={toPx(cell.w)} height={toPx(cell.h)} rx="4" ry="4" fill="#c7d2fe" stroke="#4338ca"/>
               <rect x={toPx(bleedMM)} y={toPx(bleedMM)} width={toPx(cell.w-2*bleedMM)} height={toPx(cell.h-2*bleedMM)} fill="#fff" stroke="#1f2937" strokeDasharray="4 3"/>
             </g>
           ))}
         </svg>
       </div>
-      {/* Restored helper metrics under the diagram */}
-      <div className="mt-2 grid grid-cols-2 gap-2 text-[11px]">
-        <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Ups</span><span className="font-semibold">{layout.ups}</span></div>
-        <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Sheets</span><span className="font-semibold">{sheets}</span></div>
-        <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Clicks</span><span className="font-semibold">{clicks}</span></div>
-        <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Click rate</span><span className="font-semibold">${clickRate.toFixed(3)}</span></div>
-      </div>
+      {showMetrics && (
+        <div className="mt-2 grid grid-cols-2 gap-2 text-[11px]">
+          <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Ups</span><span className="font-semibold">{layout.ups}</span></div>
+          <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Sheets</span><span className="font-semibold">{sheets}</span></div>
+          <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Clicks</span><span className="font-semibold">{clicks}</span></div>
+          <div className="border rounded-md px-2 py-1 bg-white flex justify-between"><span>Click rate</span><span className="font-semibold">${clickRate.toFixed(3)}</span></div>
+        </div>
+      )}
       <div className="mt-2">
         <label className="inline-flex items-center gap-2 text-xs">
           <input type="checkbox" className="accent-indigo-600"
                  checked={line.allowRotate!==false}
                  onChange={(e)=>line._onChangeRotate?.(e.target.checked)}/>
           Allow rotate
         </label>
       </div>
     </div>
   );
 }
*** a/src/App.jsx
--- b/src/App.jsx
@@
-        {/* 4/5 controls (left) — 1/5 diagram (right) */}
-        <div className="grid grid-cols-1 md:grid-cols-5 md:gap-4 gap-2">
-          {/* Left controls */}
-          <div className="md:col-span-4 space-y-3">
+        {/* Fields 1fr | Diagram auto (no extra whitespace) */}
+        <div className="grid grid-cols-1 md:grid-cols-[minmax(0,1fr)_auto] md:gap-6 gap-2 items-start">
+          {/* Left controls */}
+          <div className="space-y-3">
             {/* Preset row */}
             <div className="grid grid-cols-12 gap-2 md:gap-3 items-end">
               <div className="col-span-12 lg:col-span-6">
@@
-          {/* Right: 1/5 width diagram; metrics + Allow rotate below */}
-          <div className="md:col-span-1">
-            <LayoutDiagram line={{...line, _onChangeRotate:(checked)=>onChange({...line, allowRotate:checked})}}/>
+          {/* Right: auto-width diagram; metrics + Allow rotate below */}
+          <div className="justify-self-start">
+            <LayoutDiagram
+              compact={true}
+              line={{...line, _onChangeRotate:(checked)=>onChange({...line, allowRotate:checked})}}
+            />
           </div>
         </div>
       </Section>
*** a/src/App.jsx
--- b/src/App.jsx
@@
-          <div className="grid grid-cols-1 sm:grid-cols-5 gap-4">
-            {/* Fields (4/5) */}
-            <div className="md:col-span-3 lg:col-span-4 space-y-3">
+          <div className="grid grid-cols-1 sm:grid-cols-[minmax(0,1fr)_auto] gap-6 items-start">
+            {/* Fields */}
+            <div className="space-y-3">
               <Section title="Preset Details">
@@
-            {/* Diagram (1/5) */}
-            <div className="md:col-span-2 lg:col-span-1">
-              {previewLine && <LayoutDiagram line={previewLine} />}
+            {/* Diagram (compact, no metrics, auto width) */}
+            <div className="justify-self-start">
+              {previewLine && <LayoutDiagram line={previewLine} showMetrics={false} compact={true} />}
             </div>
           </div>